/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* copy = head; 
        stack<int> Stack;
        while(copy != nullptr){
            Stack.push(copy->val);
            copy = copy->next;
        }
        copy = head; 
        while(!Stack.empty()){
            copy->val = Stack.top();
            Stack.pop();
            copy = copy->next;
        }
        return head; 
    }
};
