1. set pointers to the first element and the last element
2. add the value from the first pointer with the second pointer
3. check if they add to the target (if they are equal then stop)
4. check if the sum is less than the target, then move the first pointer to the right to increase the total sum(remember, the input is in ascending order, this means if we move the pointer to the right the sum increases). 
5. check if the sum is greater than the target, then move the second pointer(from the end) to the left. This will decrease the  value of the sum.
6. Repeat steps 3-5 until the target is found. 

Time complexity: O(N)

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        vector<int> res;
        int sum = 0;
        int i = 0;
        int j = numbers.size()-1;

        while (i < j){
            sum = numbers[i] + numbers[j];
            if(sum == target){
                res.push_back(i+1);
                res.push_back(j+1);
                return res;
            }
            else if (sum < target){
                i++;
            }
            else{
                j--;
            }
        }
        
        return res;
    }
};
