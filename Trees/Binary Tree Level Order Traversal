/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == nullptr){
            return res;
        }

        queue<TreeNode*> q; 
        q.push(root);

        while(!q.empty()){
 
            int levelSize = q.size();
            vector<int> levelNodes;

            for(int i = 0; i < levelSize; i++){
                TreeNode* copy = q.front();
                q.pop();
                levelNodes.push_back(copy->val);
                if(copy->left != nullptr){
                    q.push(copy->left);
                }
                if(copy->right != nullptr){
                    q.push(copy->right);
                }
            }

            res.push_back(levelNodes);
        }
        return res;
    }
};
