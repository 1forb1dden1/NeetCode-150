/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void buildView(TreeNode* root, vector<int>& res, int depth){
        if(root != nullptr){
            if(depth == res.size()) {
                res.push_back(root->val);
            }
            buildView(root->right, res, depth + 1);
            buildView(root->left, res, depth + 1);
        }
    }

    vector<int> rightSideView(TreeNode* root) {
        vector<int> res;
        if(root == nullptr){
            return res;
        }
        buildView(root, res, 0);
        return res; 
    }
};
