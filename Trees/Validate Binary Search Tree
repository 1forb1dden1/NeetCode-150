/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    //inorder traverses in ascending order
    void inOrderTraversal(TreeNode* root, vector<int>& items){
        if(root == nullptr){
            return;
        } else {
            inOrderTraversal(root->left, items);
            items.push_back(root->val);
            inOrderTraversal(root->right, items);
        }
    }

    bool isValidBST(TreeNode* root) {
        if(root == nullptr){
            return false; 
        }
        vector<int> items;
        inOrderTraversal(root, items);
        if(items.size() <= 1){
            return true; 
        }
        for(int i = 1; i < items.size(); i++){
            if(items[i] <= items[i-1]){
                return false;
            }
        }
        return true; 
    }
};
