class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n = nums.size();
        if(n == 0 || n == 1){
            return n;
        }

        set<int> map; 
        for(int i = 0; i < nums.size(); i++){
            map.insert(nums[i]);
        }

        int previous = *map.begin();
        int current = 1; 
        int maximum = 1;

        for(auto it = map.begin(); it != map.end(); it++){
            cout << *it << " ";
            if(previous == *it-1){
                current+=1;
                maximum = max(current, maximum);
                previous = *it;
            } else {
                current = 1;
                previous = *it;
            }
        }
        return maximum; 
    }
};
