class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> res(n, 1);

        //assume nums = [1,2,3,4]
        //after the prefix product res is [1,1,2,6]
        int prefix_product = 1;
        for(int i = 0; i < n; i++){
            res[i] *= prefix_product;
            cout << prefix_product << " ";
            prefix_product *= nums[i];
        }
        
        //assume nums is = [1,2,3,4]
        //suffix is [24,12,4,1]
        cout << "\n";
        int suffix_product = 1;
        for( int j = n-1; j >= 0; j--){
            res[j] *= suffix_product;
            cout << suffix_product << " ";
            suffix_product *= nums[j];
        }

        //[1,1,2,6] * [24,12,4,1] = [24,12,8,6]
        //res = suffix * prefix = [24,12,8,6]

        return res; 
    }
};
