class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> triples;
        for(const auto& p: points){
            triples.push_back({p[0] * p[0] + p[1] * p[1], p[0], p[1]});
        }

        //stores type vector<int>, stored in vector, sorts in ascending order;
        priority_queue<vector<int>, vector<vector<int>>, greater<vector<int>>> pq;

        for(int i = 0; i < triples.size(); i++){
            pq.push(triples[i]);
        }

        vector<vector<int>> res;

        while (k > 0){
            vector<int> curr = pq.top();
            pq.pop();
            res.push_back({curr[1], curr[2]});
            k--;
        }
        return res;
    }
};
